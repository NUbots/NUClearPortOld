/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUBots <nubots@nubots.net>
 */

package messages.input.proto;

message GameController {
    message Data {
        enum Mode {
            NORMAL           = 1;
            PENALTY_SHOOTOUT = 2;
            OVERTIME         = 3;
        }

        enum Phase {
            INITIAL  = 1;
            READY    = 2;
            SET      = 3;
            PLAYING  = 4;
            TIMEOUT  = 5;
            FINISHED = 6;
        }

        enum PenaltyReason {
            UNPENALISED                   = 1;
            BALL_MANIPULATION             = 2;
            PHYSICAL_CONTACT              = 3;
            ILLEGAL_ATTACK                = 4;
            ILLEGAL_DEFENSE               = 5;
            REQUEST_FOR_PICKUP            = 6;
            REQUEST_FOR_SERVICE           = 7;
            REQUEST_FOR_PICKUP_TO_SERVICE = 8;
            SUBSTITUTE                    = 9;
            MANUAL                        = 10;
        }

        message Robot {
            required uint32 id                    = 1;
            required PenaltyReason penalty_reason = 2;
        }

        message Team {
            required uint32 teamId       = 1; // unique team number
            required uint32 score        = 2; // team's score
            required string coachMessage = 3; // the coach's message to the team
            repeated Robot players       = 4;
        }

        required Phase phase          = 1;
        required Mode mode            = 2;
        required bool firstHalf       = 3;
        required bool kickedOutByUs   = 4;
        required uint64 kickedOutTime = 5;
        required bool ourKickOff      = 6;
        required uint64 primaryTime   = 7;
        required uint64 secondaryTime = 8;
        required Team team            = 9;
        required Team opponent        = 10;
    }

    enum Change {
        TEAM_GOAL_SCORED = 1;
    }
}